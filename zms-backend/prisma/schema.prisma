// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(uuid())
  fullName  String
  email     String   @unique
  password  String
  role      Role     @default(ADMIN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  
  // Relations
  sentInvitations Invitation[]
}

model Animal {
  id        String   @id @default(uuid())
  species   String
  gender    String
  isChild   Boolean  @default(false)
  age       Int
  weight    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Ticket {
  id          String     @id @default(uuid())
  name        String
  dateOfVisit DateTime
  description String
  passType    PassType
  userType    UserType
  passStatus  PassStatus
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt @default(now())
}

model Invitation {
  id          String           @id @default(uuid())
  email       String           @unique
  token       String           @unique
  invitedBy   String
  role        Role             @default(ADMIN)
  expiresAt   DateTime
  status      InvitationStatus @default(PENDING)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt @default(now())
  
  // Relations
  inviter     Admin            @relation(fields: [invitedBy], references: [id])
}

enum Role {
  ADMIN
  STAFF
}

enum PassType {
  ONE_TIME
  MONTHLY
  YEARLY
}

enum UserType {
  INDIVIDUAL
  GROUP
}

enum PassStatus {
  NORMAL
  VIP
}

enum InvitationStatus {
  PENDING
  ACCEPTED
  EXPIRED
}
